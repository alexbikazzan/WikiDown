@using WikiDown
@model WikiArticleInfoViewModel
@{
    bool hasRevisions = Model.Revisions.Any();
    bool hasRedirects = Model.ArticleRedirects.Any();
    int colWidth = (hasRevisions && hasRedirects) ? 6 : 12;
}

@section Navbar {
    @Html.ArticleNavigation(Model)
}

<h1>@Model.PageTitle</h1>

@if (hasRevisions || hasRedirects)
{
    <div class="row">
        @if (hasRevisions)
        {
            <div id="article-revisions" class="col-sm-@colWidth ">
                <h2>Revisions</h2>
                
                <ul class="list-group">
                    @foreach (var revision in Model.Revisions)
                    {
                        <li class="list-group-item @(Model.ActiveArticleRevisionId == revision.Key ? "list-group-item-success" : null)">
                            <div class="pull-left btn btn-link">
                                @RevisionLink(revision.Value)
                            </div>
                            @*<a href="@Url.WikiDeleteArticleRevision(Model.ArticleSlug, revision)" class="btn btn-danger">Delete</a>*@
                            <div class="pull-right">
                                <a href="#"
                                   data-api-url="@Url.ApiArticleRevisionPreview(Model.ArticleId, revision.Value)"
                                   class="article-revision-preview btn btn-info">Preview</a>
                            </div>
                            <div class="clearfix"></div>
                        </li>
                    }
                </ul>
            </div>
        }
        
        @if (hasRedirects)
        {
            <div class="col-sm-@colWidth">
                <h2>Redirects</h2>

                <div class="content">
                    @foreach (var redirect in Model.ArticleRedirects)
                    {
                        <div class="redirect">
                            <a href="@Url.WikiArticle(redirect.Key, redirect: false)">@redirect.Value</a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    if (hasRevisions)
    {
        <div id="article-revision-preview" class="panel panel-default" hidden>
            <div class="panel-heading">
                <h2 class="panel-title">Revision preview</h2>
            </div>
            <div id="article-revision-preview-content" class="panel-body"></div>
        </div>
    }
}

@if (Model.MetaKeywords.Any())
{
    <div id="meta-keywords" class="row container">
        <h2>Meta-keywords</h2>
        
        @foreach (var keyword in Model.MetaKeywords)
        {
            <span class="label label-default">@keyword</span>
        }
    </div>
}

@helper RevisionLink(ArticleRevisionDate articleRevisionDate)
{
    <a href="@Url.WikiArticle(Model.ArticleSlug, articleRevisionDate)">@articleRevisionDate.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</a>
}

@section Js {
    @Html.BundledJs("info")
}